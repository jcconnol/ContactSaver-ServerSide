package com.John.commands.contacts;

import org.apache.commons.lang3.StringUtils;

import com.John.commands.ResultCommandInterface;
import com.John.controllers.exceptions.ConflictException;
import com.John.controllers.exceptions.UnprocessableEntityException;
import com.John.models.api.Contact;
import com.John.models.entities.ContactEntity;
import com.John.models.repositories.ContactRepository;
import com.John.models.repositories.interfaces.ContactRepositoryInterface;

public class ContactCreateCommand implements ResultCommandInterface<Contact> {
	@Override
	public Contact execute() {
		//Validations
		if (StringUtils.isBlank(this.apiProduct.getLookupCode())) {
			throw new UnprocessableEntityException("lookupcode");
		}

		ContactEntity contactEntity = this.productRepository.byLookupCode(this.apiProduct.getLookupCode());
		if (contactEntity != null) {
			throw new ConflictException("lookupcode"); //Lookupcode already defined for another product.
		}
		
		//No ENTITY object was returned from the database, thus the API object's lookupcode must be unique.
		contactEntity = new ContactEntity(apiProduct); //Create a new ENTITY object from the API object details.
		contactEntity.save(); //Write, via an INSERT, the new record to the database.
		
		this.apiProduct.setId(contactEntity.getId()); //Synchronize information generated by the database upon INSERT.
		this.apiProduct.setCreatedOn(contactEntity.getCreatedOn());

		return this.apiProduct;
	}

	//Properties
	private Contact apiProduct;
	public Contact getApiProduct() {
		return this.apiProduct;
	}
	public ContactCreateCommand setApiProduct(Contact apiProduct) {
		this.apiProduct = apiProduct;
		return this;
	}
	
	private ContactRepositoryInterface productRepository;
	public ContactRepositoryInterface getProductRepository() {
		return this.productRepository;
	}
	public ContactCreateCommand setProductRepository(ContactRepositoryInterface productRepository) {
		this.productRepository = productRepository;
		return this;
	}
	
	public ContactCreateCommand() {
		this.productRepository = new ContactRepository();
	}
}
